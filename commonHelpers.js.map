{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["'use strict';\nimport flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\n// const options = {\n//     enableTime: true,\n//     time_24hr: true,\n//     defaultDate: new Date(),\n//     minuteIncrement: 1,\n//     onClose(selectedDates) {\n//       console.log(selectedDates[0]);\n//     },\n//   };\n  \nconst refs = {\n    datetimePicker:document.querySelector('#datetime-picker'),\n    startBtn:document.querySelector('[data-start]'),\n    days:document.querySelector('[data-days]'),\n    hours:document.querySelector('[data-hours]'),\n    minutes:document.querySelector('[data-minutes]'),\n    seconds:document.querySelector('[data-seconds]'),\n}\nconst initTime = Date.now(); \nintervalId = setInterval( ()=>{\n    const currentTime = Date.now();\n    const diff = initTime-currentTime;\n    const time = convertMs(diff)\n})\n\nrefs.startBtn.addEventListener('click',()=>{\n   \nsetInterval(()=>{\n    const date = Date.now()\n    const currentTime = initTime - date;\n\n    const hours = currentTime.getHours(); \n    console.log(hours);\n\n    // const minutes = (currentTime - hours).getMinutes();\n    // const seconds = (currentTime - minutes).getSeconds();\n\n    function convertMs(ms) {\n        // Number of milliseconds per unit of time\n        const second = 1000;\n        const minute = second * 60;\n        const hour = minute * 60;\n        const day = hour * 24;\n      \n        // Remaining days\n        const days = Math.floor(ms / day);\n        // Remaining hours\n        const hours = Math.floor((ms % day) / hour);\n        // Remaining minutes\n        const minutes = Math.floor(((ms % day) % hour) / minute);\n        // Remaining seconds\n        const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n      \n        return { days, hours, minutes, seconds };\n      }\n      \n      console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\n      console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\n      console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n      \n\n\n\n\n    \n    \n},1000)\n});\n\n"],"names":["refs","initTime","currentTime","diff","date","hours","convertMs","ms","days","minutes","seconds"],"mappings":"4HAiBA,MAAMA,EAAO,CACT,eAAe,SAAS,cAAc,kBAAkB,EACxD,SAAS,SAAS,cAAc,cAAc,EAC9C,KAAK,SAAS,cAAc,aAAa,EACzC,MAAM,SAAS,cAAc,cAAc,EAC3C,QAAQ,SAAS,cAAc,gBAAgB,EAC/C,QAAQ,SAAS,cAAc,gBAAgB,CACnD,EACMC,EAAW,KAAK,MACtB,WAAa,YAAa,IAAI,CAC1B,MAAMC,EAAc,KAAK,MACnBC,EAAOF,EAASC,EACT,UAAUC,CAAI,CAC/B,CAAC,EAEDH,EAAK,SAAS,iBAAiB,QAAQ,IAAI,CAE3C,YAAY,IAAI,CACZ,MAAMI,EAAO,KAAK,IAAK,EAGjBC,GAFcJ,EAAWG,GAEL,WAC1B,QAAQ,IAAIC,CAAK,EAKjB,SAASC,EAAUC,EAAI,CAQnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BF,EAAQ,KAAK,MAAOE,EAAK,MAAO,IAAI,EAEpCE,EAAU,KAAK,MAAQF,EAAK,MAAO,KAAQ,GAAM,EAEjDG,EAAU,KAAK,MAASH,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAH,EAAO,QAAAI,EAAS,QAAAC,CAAO,CACvC,CAED,QAAQ,IAAIJ,EAAU,GAAI,CAAC,EAC3B,QAAQ,IAAIA,EAAU,IAAM,CAAC,EAC7B,QAAQ,IAAIA,EAAU,MAAQ,CAAC,CAQrC,EAAE,GAAI,CACN,CAAC"}